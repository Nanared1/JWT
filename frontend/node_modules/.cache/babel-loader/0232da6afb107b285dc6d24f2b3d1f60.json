{"ast":null,"code":"import _slicedToArray from \"/Users/nanabaahabekah/Documents/Javascript/JWT/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanabaahabekah/Documents/Javascript/JWT/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Router, navigate } from '@reach/router';\nimport Navigation from './components/Navigation';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Protected from './components/Protected';\nimport Content from './components/Content';\nexport const UserContext = React.createContext([]);\n\nfunction App() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const logOutCallback = async () => {\n    await fetch('http://localhost:4000/logout', {\n      method: 'POST',\n      credentials: 'include'\n    });\n    setUser({});\n    navigate('/');\n  };\n\n  useEffect(() => {\n    async function checkRefreshToken() {\n      const result = await (await fetch('http://localhost:4000/refresh_token', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })).json();\n      setUser({\n        accesstoken: result.accesstoken\n      });\n      setLoading(false);\n    }\n\n    checkRefreshToken();\n  }, []);\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Loading\");\n  return React.createElement(UserContext.Provider, {\n    value: [user, setUser],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    logOutCallback: logOutCallback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Router, {\n    id: \"router\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Login, {\n    path: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Register, {\n    path: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Protected, {\n    path: \"protected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Content, {\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nanabaahabekah/Documents/Javascript/JWT/frontend/src/App.js"],"names":["React","useState","useEffect","Router","navigate","Navigation","Login","Register","Protected","Content","UserContext","createContext","App","user","setUser","loading","setLoading","logOutCallback","fetch","method","credentials","checkRefreshToken","result","headers","json","accesstoken"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAGA,OAAO,MAAMC,WAAW,GAAGV,KAAK,CAACW,aAAN,CAAoB,EAApB,CAApB;;AAEP,SAASC,GAAT,GAAe;AAAA,oBAEWX,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,QAENY,IAFM;AAAA,QAEAC,OAFA;;AAAA,qBAGiBb,QAAQ,CAAC,IAAD,CAHzB;AAAA;AAAA,QAGNc,OAHM;AAAA,QAGGC,UAHH;;AAKb,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMC,KAAK,CAAC,8BAAD,EAAiC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,WAAW,EAAE;AAF6B,KAAjC,CAAX;AAIAN,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAV,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAPD;;AASAF,EAAAA,SAAS,CAAE,MAAM;AACf,mBAAemB,iBAAf,GAAmC;AACjC,YAAMC,MAAM,GAAG,MAAM,CAAC,MAAMJ,KAAK,CAAC,qCAAD,EAAwC;AACvEC,QAAAA,MAAM,EAAE,MAD+D;AAEvEC,QAAAA,WAAW,EAAE,SAF0D;AAGvEG,QAAAA,OAAO,EAAG;AACR,0BAAiB;AADT;AAH6D,OAAxC,CAAZ,EAMjBC,IANiB,EAArB;AAQAV,MAAAA,OAAO,CAAC;AACNW,QAAAA,WAAW,EAAEH,MAAM,CAACG;AADd,OAAD,CAAP;AAGAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDK,IAAAA,iBAAiB;AAClB,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,MAAGN,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACZ,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACF,IAAD,EAAOC,OAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,cAAc,EAAEG,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CADF,CADF;AAeD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Router, navigate } from '@reach/router';\n\nimport Navigation from './components/Navigation';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Protected from './components/Protected';\nimport Content from './components/Content';\n\n\nexport const UserContext = React.createContext([]);\n\nfunction App() {\n\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const logOutCallback = async () => {\n    await fetch('http://localhost:4000/logout', {\n      method: 'POST',\n      credentials: 'include'\n    });\n    setUser({});\n    navigate('/');\n  }\n\n  useEffect( () => {\n    async function checkRefreshToken() {\n      const result = await (await fetch('http://localhost:4000/refresh_token', {\n        method: 'POST',\n        credentials: 'include',\n        headers : {\n          'Content-Type' : 'application/json'\n        }\n      })).json()\n\n      setUser({\n        accesstoken: result.accesstoken\n      });\n      setLoading(false);\n    }\n    checkRefreshToken()\n  }, []);\n\n  if(loading) return <div>Loading</div>\n  return (\n    <UserContext.Provider value={[user, setUser]}>\n      <div className=\"app\">\n        <Navigation logOutCallback={logOutCallback}/>\n        <Router id=\"router\">\n\n          <Login path=\"login\" />\n          <Register path=\"register\"/>\n          <Protected path=\"protected\"/>\n          <Content path=\"/\"/>\n\n        </Router>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}